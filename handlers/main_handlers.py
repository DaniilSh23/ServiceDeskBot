from pyrogram import Client, filters
from pyrogram.types import CallbackQuery, Message

from filters.main_filters import ask_post_for_channel_filter, send_post_to_channel_filter
from keyboards.bot_keyboards import form_webapp_kbrd, ADMIN_KBRD, CANCEL_SEND_POST_KBRD, FOR_COPYED_POST_KBRD
from secondary_functions.req_to_bot_api import post_for_check_user
from settings.config import FORM_LINK, USER_STATES, CHANNEL_ID


@Client.on_message(filters.command(['start']))
async def start_handler(client, update):
    """
    –°–æ–≤–µ—Ä—à–∞–µ–º –ø—Ä–æ–≤–µ—Ä–∫—É –Ω–∞–ª–∏—á–∏—è –∏ –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç–∏ —é–∑–µ—Ä–∞ –≤ –ë–∏—Ç—Ä–∏–∫—Å–µ,
    –µ—Å–ª–∏ –ø—Ä–æ–≤–µ—Ä–∫–∞ –¥–∞–ª–∞ –ø–æ–ª–æ–∂–∏—Ç–µ–ª—å–Ω—ã–π —Ä–µ–∑—É–ª—å—Ç–∞—Ç, —Ç–æ –æ—Ç–¥–∞—ë–º –∫–Ω–æ–ø–∫—É –Ω–∞ —Ñ–æ—Ä–º—É –¥–ª—è –æ—Å—Ç–∞–≤–ª–µ–Ω–∏—è –∑–∞—è–≤–∫–∏ –≤ Service Desk.
    """
    check_usr_rslt = await post_for_check_user(tlg_username=update.from_user.username, tlg_id=update.from_user.id)

    if check_usr_rslt == 200:
        await update.reply_text(
            text='–ü–æ–¥–∞–π—Ç–µ –Ω–æ–≤—É—é –∑–∞—è–≤–∫—É –≤ —Ç–µ—Ö.–ø–æ–¥–¥–µ—Ä–∂–∫—É, –Ω–∞–∂–∞–≤ –Ω–∞ –∫–Ω–æ–ø–∫—É –Ω–∏–∂–µ.üëá',
            reply_markup=await form_webapp_kbrd(form_link=FORM_LINK, btn_text='üñä–ü–æ–¥–∞—Ç—å –∑–∞—è–≤–∫—É')
        )

    elif check_usr_rslt == 400:
        await update.reply_text(
            text=f'–ù–µ—É–¥–∞—á–Ω–∞—è –ø—Ä–æ–≤–µ—Ä–∫–∞ –¥–æ—Å—Ç—É–ø–∞. –í–æ–∑–º–æ–∂–Ω–æ —É –í–∞—Å –Ω–µ —É–∫–∞–∑–∞–Ω username –≤ –ø—Ä–æ—Ñ–∏–ª–µ Telegram ü™™'
        )

    elif check_usr_rslt == 403:
        await update.reply_text(
            text=f'–ö —Å–æ–∂–∞–ª–µ–Ω–∏—é, —É –í–∞—Å –Ω–µ—Ç –¥–æ—Å—Ç—É–ø–∞ –∫ –¥–∞–ª—å–Ω–µ–π—à–µ–º—É —Ñ—É–Ω–∫—Ü–∏–æ–Ω–∞–ª—É. –í—ã —Ç–æ—á–Ω–æ —Å–æ—Ç—Ä—É–¥–Ω–∏–∫ –¶–§–£? üíº'
        )

    elif check_usr_rslt == 502:
        await update.reply_text(
            text=f'–ù–µ —É–¥–∞–ª–æ—Å—å –¥–æ –∫–æ–Ω—Ü–∞ –ø—Ä–æ–≤–µ—Å—Ç–∏ –ø—Ä–æ–≤–µ—Ä–∫—É –¥–æ—Å—Ç—É–ø–∞. –ü—Ä–æ–±–ª–µ–º–∞ –≤–æ –≤–∑–∞–∏–º–æ–¥–µ–π—Å—Ç–≤–∏–∏ —Å –ë–∏—Ç—Ä–∏–∫—Å. üöß'
        )

    else:
        await update.reply_text(
            text=f'üîÆ –ü—Ä–æ–∏–∑–æ—à–ª–æ —á—Ç–æ-—Ç–æ –Ω–µ–ø—Ä–µ–¥–≤–∏–¥–µ–Ω–Ω–æ–µ...–∫–∞–∫–∞—è-—Ç–æ —Ç—ë–º–Ω–∞—è –º–∞–≥–∏—è...\n'
                 f'–î–∞–∂–µ –±–æ—é—Å—å –ø—Ä–µ–¥—Å—Ç–∞–≤–∏—Ç—å —á—Ç–æ, –Ω–æ –±–æ—Ç –Ω–µ –º–æ–∂–µ—Ç –¥–∞–ª—å—à–µ –ø—Ä–æ–¥–æ–ª–∂–∞—Ç—å —Ä–∞–±–æ—Ç–∞—Ç—å.'
        )




# TODO: –Ω–∏–∂–µ —Ö—ç–Ω–¥–ª–µ—Ä—ã —Å –ø—Ä–æ—à–ª–æ–≥–æ –ø—Ä–æ–µ–∫—Ç–∞, –ø–æ–∑–∂–µ –º–æ–∂–Ω–æ –±—É–¥–µ—Ç —É–¥–∞–ª–∏—Ç—å
@Client.on_callback_query(ask_post_for_channel_filter)
async def ask_post_for_channel_handler(client, update: CallbackQuery):
    """
    –ó–∞–ø—Ä–∞—à–∏–≤–∞–µ–º –ø–æ—Å—Ç –¥–ª—è –æ—Ç–ø—Ä–∞–≤–∫–∏ –µ–≥–æ –≤ –∫–∞–Ω–∞–ª.
    """
    await update.edit_message_text(
        text=f'–û–∫–µ–π. –ü—Ä–∏—à–ª–∏—Ç–µ –º–Ω–µ –ø–æ—Å—Ç. (–≤—Å—ë, —á—Ç–æ —Å–µ–π—á–∞—Å –æ—Ç–ø—Ä–∞–≤–∏—Ç–µ, —è –ø–µ—Ä–µ—à–ª—é –≤ –∫–∞–Ω–∞–ª, –ø–æ—ç—Ç–æ–º—É –±—É–¥—å—Ç–µ –≤–Ω–∏–º–∞—Ç–µ–ª—å–Ω—ã!)'
             f'–ï—Å–ª–∏ –≤—ã –∑–∞–∫–æ–Ω—á–∏–ª–∏, —Ç–æ –Ω–∞–∂–º–∏—Ç–µ –∫–Ω–æ–ø–∫—É –Ω–∏–∂–µ.',
        reply_markup=CANCEL_SEND_POST_KBRD
    )
    USER_STATES[update.from_user.id] = 'ask_post_for_channel'


@Client.on_message(send_post_to_channel_filter)
async def send_post_to_channel_handler(client, update: Message):
    """
    –ü–µ—Ä–µ—Å—ã–ª–∞–µ–º –ø–æ—Å—Ç –≤ –∫–∞–Ω–∞–ª
    """
    try:
        forwarded_message = await update.copy(
            chat_id=CHANNEL_ID,
            reply_markup=FOR_COPYED_POST_KBRD
        )
    except Exception as error:
        await update.reply_text(
            text=f'‚ùå–ü–æ—Å—Ç –Ω–µ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω. –¢–µ–∫—Å—Ç –æ—à–∏–±–∫–∏:\n\n{error}'
        )
        return

    await update.reply_text(
        text=f'‚úÖ–ü–æ—Å—Ç –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω\n\n'
             f'–°—Å—ã–ª–∫–∞ –Ω–∞ –ø–æ—Å—Ç:https://t.me/{forwarded_message.sender_chat.username}/{forwarded_message.id}',
        reply_markup=CANCEL_SEND_POST_KBRD
    )


@Client.on_callback_query()
async def cancel_send_post_to_channel_handler(client, update: CallbackQuery):
    """
    –•—ç–Ω–¥–ª–µ—Ä –¥–ª—è –æ—Ç–º–µ–Ω—ã –ø–µ—Ä–µ—Å—ã–ª–∫–∏ –ø–æ—Å—Ç–æ–≤ –≤ –∫–∞–Ω–∞–ª.
    """
    USER_STATES.pop(update.from_user.id)    # –û—á–∏—â–∞–µ–º —Å—Ç—ç–π—Ç
    await update.edit_message_text(
        text=f'üëë–ú–µ–Ω—é –∞–¥–º–∏–Ω–∞',
        reply_markup=ADMIN_KBRD,
    )


# @Client.on_message(filters.channel | filters.all)
# async def update_echo(client, update):
#     # print(update)
#     print(CHANNEL_ID)
