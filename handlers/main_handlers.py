from pyrogram import Client, filters
from pyrogram.types import Message, CallbackQuery
from filters.main_filters import new_comment_filter, answer_comment_filter, cancel_comment_answer_filter, \
    send_comment_answer_filter
from keyboards.bot_keyboards import form_webapp_kbrd, new_comment_kbrd, CANCEL_SEND_COMMENT_KBRD
from secondary_functions.req_to_bot_api import post_for_check_user
from settings.config import FORM_LINK, ANSWER_COMMENT_STATES


@Client.on_message(filters.command(['start', 'menu']))
async def start_handler(client, update):
    """
    –°–æ–≤–µ—Ä—à–∞–µ–º –ø—Ä–æ–≤–µ—Ä–∫—É –Ω–∞–ª–∏—á–∏—è –∏ –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç–∏ —é–∑–µ—Ä–∞ –≤ –ë–∏—Ç—Ä–∏–∫—Å–µ,
    –µ—Å–ª–∏ –ø—Ä–æ–≤–µ—Ä–∫–∞ –¥–∞–ª–∞ –ø–æ–ª–æ–∂–∏—Ç–µ–ª—å–Ω—ã–π —Ä–µ–∑—É–ª—å—Ç–∞—Ç, —Ç–æ –æ—Ç–¥–∞—ë–º –∫–Ω–æ–ø–∫—É –Ω–∞ —Ñ–æ—Ä–º—É –¥–ª—è –æ—Å—Ç–∞–≤–ª–µ–Ω–∏—è –∑–∞—è–≤–∫–∏ –≤ Service Desk.
    """
    check_usr_rslt = await post_for_check_user(tlg_username=update.from_user.username, tlg_id=update.from_user.id)

    if check_usr_rslt == 200:
        await update.reply_text(
            text='–ü–æ–¥–∞–π—Ç–µ –Ω–æ–≤—É—é –∑–∞—è–≤–∫—É –≤ —Ç–µ—Ö.–ø–æ–¥–¥–µ—Ä–∂–∫—É, –Ω–∞–∂–∞–≤ –Ω–∞ –∫–Ω–æ–ø–∫—É –Ω–∏–∂–µ.üëá',
            reply_markup=await form_webapp_kbrd(form_link=FORM_LINK, btn_text='üñä–ü–æ–¥–∞—Ç—å –∑–∞—è–≤–∫—É')
        )

    elif check_usr_rslt == 400:
        await update.reply_text(
            text=f'–ù–µ—É–¥–∞—á–Ω–∞—è –ø—Ä–æ–≤–µ—Ä–∫–∞ –¥–æ—Å—Ç—É–ø–∞. –í–æ–∑–º–æ–∂–Ω–æ —É –í–∞—Å –Ω–µ —É–∫–∞–∑–∞–Ω username –≤ –ø—Ä–æ—Ñ–∏–ª–µ Telegram ü™™'
        )

    elif check_usr_rslt == 403:
        await update.reply_text(
            text=f'–ö —Å–æ–∂–∞–ª–µ–Ω–∏—é, —É –í–∞—Å –Ω–µ—Ç –¥–æ—Å—Ç—É–ø–∞ –∫ –¥–∞–ª—å–Ω–µ–π—à–µ–º—É —Ñ—É–Ω–∫—Ü–∏–æ–Ω–∞–ª—É. –í—ã —Ç–æ—á–Ω–æ —Å–æ—Ç—Ä—É–¥–Ω–∏–∫ –¶–§–£? üíº\n'
                 f'–¢–∞–∫–∂–µ, –ø–æ–∂–∞–ª—É–π—Å—Ç–∞, –ø—Ä–æ–≤–µ—Ä—å—Ç–µ, —á—Ç–æ —É –í–∞—Å —É–∫–∞–∑–∞–Ω username –≤ –ø—Ä–æ—Ñ–∏–ª–µ Telegram ü™™'
        )

    elif check_usr_rslt == 502:
        await update.reply_text(
            text=f'–ù–µ —É–¥–∞–ª–æ—Å—å –¥–æ –∫–æ–Ω—Ü–∞ –ø—Ä–æ–≤–µ—Å—Ç–∏ –ø—Ä–æ–≤–µ—Ä–∫—É –¥–æ—Å—Ç—É–ø–∞. –ü—Ä–æ–±–ª–µ–º–∞ –≤–æ –≤–∑–∞–∏–º–æ–¥–µ–π—Å—Ç–≤–∏–∏ —Å –ë–∏—Ç—Ä–∏–∫—Å. üöß'
        )

    else:
        await update.reply_text(
            text=f'üîÆ –ü—Ä–æ–∏–∑–æ—à–ª–æ —á—Ç–æ-—Ç–æ –Ω–µ–ø—Ä–µ–¥–≤–∏–¥–µ–Ω–Ω–æ–µ...–∫–∞–∫–∞—è-—Ç–æ —Ç—ë–º–Ω–∞—è –º–∞–≥–∏—è...\n'
                 f'–î–∞–∂–µ –±–æ—é—Å—å –ø—Ä–µ–¥—Å—Ç–∞–≤–∏—Ç—å —á—Ç–æ, –Ω–æ –±–æ—Ç –Ω–µ –º–æ–∂–µ—Ç –¥–∞–ª—å—à–µ –ø—Ä–æ–¥–æ–ª–∂–∞—Ç—å —Ä–∞–±–æ—Ç–∞—Ç—å.'
        )


@Client.on_message(filters.me & filters.private & new_comment_filter)
async def new_comment_handler(client, update: Message):
    """
    –•—ç–Ω–¥–ª–µ—Ä –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è –Ω–æ–≤–æ–≥–æ –∫–æ–º–º–µ–Ω—Ç–∞ –∏ –∏–∑–º–µ–Ω–µ–Ω–∏—è –µ–≥–æ
    """
    _, task_id, task_title, comment_text = update.text.split('---')
    await update.edit_text(
        text=f'üÜï <b>–ù–æ–≤—ã–π –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏–π –ø–æ –í–∞—à–µ–π –∑–∞—è–≤–∫–µ</b>: {task_title}\n\n'
             f'<i>{comment_text}</i>',
        reply_markup=await new_comment_kbrd(task_id=task_id),
    )


@Client.on_callback_query(answer_comment_filter)
async def answer_comment_handler(client, update: CallbackQuery):
    """
    –•—ç–Ω–¥–ª–µ—Ä –¥–ª—è –Ω–∞–∂–∞—Ç–∏—è –Ω–∞ –∫–Ω–æ–ø–∫—É –æ—Ç–≤–µ—Ç–∞ –Ω–∞ –∫–æ–º–º–µ–Ω—Ç
    """
    ANSWER_COMMENT_STATES[update.from_user.id] = f'input_comment {update.data.split()[1]} {update.message.id}'
    await update.answer(f'–ü—Ä–∏—à–ª–∏—Ç–µ –±–æ—Ç—É –æ—Ç–≤–µ—Ç.')
    await update.edit_message_text(
        text=f'{update.message.text}\n\n==========\n‚ÄºÔ∏è <b>–ü—Ä–∏—à–ª–∏—Ç–µ –æ—Ç–≤–µ—Ç–Ω—ã–º —Å–æ–æ–±—â–µ–Ω–∏–µ–º —Ç–µ–∫—Å—Ç –í–∞—à–µ–≥–æ –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏—è.</b>',
        reply_markup=CANCEL_SEND_COMMENT_KBRD
    )


@Client.on_callback_query(cancel_comment_answer_filter)
async def cancel_comment_answer_handler(client, update: CallbackQuery):
    """
    –•—ç–Ω–¥–ª–µ—Ä –¥–ª—è –Ω–∞–∂–∞—Ç–∏—è –Ω–∞ –∫–Ω–æ–ø–∫—É –æ—Ç–º–µ–Ω—ã –ø—Ä–∏ –≤–≤–æ–¥–µ –æ—Ç–≤–µ—Ç–∞ –Ω–∞ –∫–æ–º–º–µ–Ω—Ç.
    """
    await update.answer(f'–û—Ç–º–µ–Ω–∞ –æ—Ç–≤–µ—Ç–∞ –Ω–∞ –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏–π.')
    task_id = ANSWER_COMMENT_STATES[update.from_user.id].split()[1]
    await update.edit_message_text(
        text=f'{update.message.text.split("==========")[0]}',
        reply_markup=await new_comment_kbrd(task_id=task_id)
    )
    ANSWER_COMMENT_STATES.pop(update.from_user.id)


@Client.on_message(filters.private & send_comment_answer_filter)
async def send_comment_answer(client, update: Message):
    """
    –•—ç–Ω–¥–ª–µ—Ä –¥–ª—è –æ—Ç–ø—Ä–∞–≤–∫–∏ –æ—Ç–≤–µ—Ç–∞ –Ω–∞ –∫–æ–º–º–µ–Ω—Ç –≤ –ë–∏—Ç—Ä—É.
    """
    task_id = ANSWER_COMMENT_STATES[update.from_user.id].split()[1]
    msg_id = ANSWER_COMMENT_STATES[update.from_user.id].split()[2]
    info_msg = await update.reply_text(text='üì° <b>–û—Ç–ø—Ä–∞–≤–ª—è—é –í–∞—à –æ—Ç–≤–µ—Ç –≤ –ë–∏—Ç—Ä–∏–∫—Å...</b>')

    # TODO: –¥–æ–ø–∏—Å–∞—Ç—å –æ—Ç–ø—Ä–∞–≤–∫—É –∫–æ–º–º–µ–Ω—Ç–∞ –≤ –±–∏—Ç—Ä—É, —á–µ—Ä–µ–∑ –≤–µ–±-–ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ

    comment_msg = await client.get_messages(
        chat_id=update.from_user.id,
        message_ids=int(msg_id),
    )
    await comment_msg.edit_text(
        text=f'{comment_msg.text.split("==========")[0]}üëå <b>–í–∞—à –æ—Ç–≤–µ—Ç: </b>{update.text}'
    )
